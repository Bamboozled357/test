'''
1. Создайте класс Account и переопределите в нем методы __init__, __repr__, __str__ и __del__.
Объекты класса должны содержать атрибуты имени, баланса и города, где открыт счет.
Метод __init__ должен возвращать сообщение о создании счета, __repr__ только имя держателя счета
и баланс, а __str__ сообщение с приветствием и также информацией о держателе счета, 
балансе и филиале банка в котором зарегистрирован клиент, __del__ в свою очередь сообщение об удаление 
и слово "Пока!"
'''

class Account:
   

    def __init__(self, name, balance, city, bank_dep):
        self.name = name
        self.city = city
        self.balance = balance
        self.bank = bank_dep
        print(f'Ваш счёт был создан в {self.bank}')

    def __repr__(self):
        return f'Ваше имя: {self.name}, на Вашем счету: {self.balance}'

    def __str__(self):
        return f'Здравствуйте, {self.name}! Ваш баланс в филиале банка {self.bank} составляет: {self.balance}'
    
    def __del__(self):
        return 'Ваш счёт удален. Пока!'


client1 = Account('Jesse', 120000, 'Bishkek', 'Demir Bank')
client1.__str__()
'''
2. Определите класс MyNumber который наследуется от класса int. 
У экземпляра класса должен быть обязательный атрибут value. 
Переопределите методы сложения, вычитания, умножения и деления для класса таким  образом чтобы при при использовании операторов + - * / - результат возвращался с сообщением об использованном методе, 
например:print(num + 5)  -------> "Это сложение и Ваш результат равен 10"
'''

class MyNumber(int):
    pass


'''
3. Напишите класс MyList, который наследуется от list. Сделайте так, чтобы индексация
элементов начиналась с 1. Например:
x = MyList([1,2,3,4,5])
x[1] → 1
'''

#write your code here

'''
4. Напишите класс Student, который описывает студента. У студента есть следующие атрибуты: имя, фамилия, класс, и оценки по предметам в следующем виде: {math’: 100, ‘history’: 89, literature’: 88}. 
Сделайте так, чтобы сравнение студентов между собой производилось по средней оценке студента по предметам.
'''

# class Student:
#     name = 'Roman'
#     surname = 'Kim'
#     grade = 'Python'
#     marks = {
#         'math': 75,
#         'history': 90,
#         'literature': 100
#     }

#     def __new__(cls: Type[_T]) -> _T:
#         pass
'''
5. Напишите класс Word и переопределите методы 'больше чем', 'меньше чем', 'больше или равно', 'меньше или равно' для сравнения объектов класса - строк по длине(len). 
Также в методе __new__ напишите условие для удаления
пробелов и пустых строк в созданных словах.
'''

# class Word:
#     _instance = None

#     def __new__(cls: Type[_T]) -> _T:
#         pass

word1 = Word()